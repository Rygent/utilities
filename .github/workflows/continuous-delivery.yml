name: Continuous Delivery

on:
  workflow_dispatch:

jobs:
  npm-publish:
    name: NPM publish
    runs-on: ubuntu-latest
    if: github.repository_owner == 'rygent'
    strategy:
      fail-fast: false
      matrix:
        include:
          - package: '@rygent/anilist'
            folder: 'anilist'
          - package: '@rygent/spotify'
            folder: 'spotify'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          registry-url: https://registry.yarnpkg.com/
      - name: Check current next version
        id: release-check
        run: |
          if [[ $(npm view ${{ matrix.package }}@next version | grep -e "$(git rev-parse --short HEAD)") ]]; \
            then echo "RELEASE=0" >> "$GITHUB_OUTPUT"; \
            else echo "RELEASE=1" >> "$GITHUB_OUTPUT"; \
          fi
      - name: Install dependencies
        if: steps.release-check.outputs.release == '1'
        run: yarn --immutable
      - name: Build package
        if: steps.release-check.outputs.release == '1'
        run: yarn build
      - name: Publish package
        if: steps.release-check.outputs.release == '1'
        run: |
          yarn config set npmAuthToken ${NODE_AUTH_TOKEN}
          yarn config set npmPublishRegistry "https://registry.yarnpkg.com"

          yarn workspace ${{ matrix.package }} run bump --preid "next.$(git rev-parse --short HEAD)"
          yarn workspace ${{ matrix.package }} npm publish --tag next || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - name: Deprecate prior development releases
        if: steps.release-check.outputs.release == '1'
        run: yarn npm-deprecate --name "*next*" --message "This version is deprecated. Please use a newer version." --package ${{ matrix.package }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
